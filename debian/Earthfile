VERSION --use-cache-command 0.6

ARG OS_VERSION="11"
FROM debian:${OS_VERSION}-slim

# VsCode will respect the default shell as configured inside the container
# see: https://github.com/microsoft/vscode-remote-release/issues/350
ENV SHELL="/bin/bash"

builder:
  ENV DEBIAN_FRONTEND="noninteractive"
  RUN apt-get -y update
  DO +FROM_NOW --NAME="ca-certificates"
  RUN apt-get -y install --no-install-recommends ca-certificates
  RUN sed -i 's/http:\/\//https:\/\//g' /etc/apt/sources.list
  DO +TO_NOW --NAME="ca-certificates"
  RUN apt-get -y update
  DO +FROM_NOW --NAME="curl"
  RUN apt-get -y install --no-install-recommends curl
  DO +TO_NOW --NAME="curl"
  DO +FROM_NOW --NAME="unzip"
  RUN apt-get -y install --no-install-recommends unzip
  DO +TO_NOW --NAME="unzip"
  DO +FROM_NOW --NAME="xz"
  RUN apt-get -y install --no-install-recommends xz-utils
  DO +TO_NOW --NAME="xz"
  RUN apt-get -y install --no-install-recommends tree

# Simply touches a new marker file so we can refer
# to it's timestamp in the "TO_NOW" script.
FROM_NOW:
  COMMAND
  ARG NAME="default"
  RUN touch "/tmp/mark-${NAME}"

# Uses a "tar" pipe to gather up all the changed files between the "FROM_NOW"
# marker and "NOW", excluding things like log files, package manager cache &
# other temporary files.
#
# Usage might look like this:
#
#   foo-provider:
#     FROM big-builder-image
#     DO +FROM_NOW --NAME="foo-install"
#     RUN install foo commands
#     DO +TO_NOW --NAME="foo-install"
#     SAVE ARTIFACT /tmp/changed-foo-install/*
#
#   foo-consumer:
#     FROM small-runtime-image
#     COPY +foo-provider/ /
#
# Of course if you know exactly what you built you don't need any of this
# and can define an approriate "SAVE ARTIFACT" command instead. This is most
# useful for collecting changes made by package managers where you do not have
# direct control over what was installed & where it was installed.
TO_NOW:
  COMMAND
  ARG NAME="default"
  RUN mkdir -p "/tmp/changed-${NAME}" \
    && tar -c --newer "/tmp/mark-${NAME}" \
      --exclude /boot \
      --exclude /dev \
      --exclude /etc/hosts \
      --exclude /etc/resolv.conf \
      --exclude /etc/ld.so.cache \
      --exclude /media \
      --exclude /mnt \
      --exclude /proc \
      --exclude /run \
      --exclude /srv \
      --exclude /sys \
      --exclude /tmp \
      --exclude /usr/share/man \
      --exclude /usr/share/doc \
      --exclude /var \
      -f - / | tar -xf - -C "/tmp/changed-${NAME}" \
    && find "/tmp/changed-${NAME}" -type d -empty -delete
